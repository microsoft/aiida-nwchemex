[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ["aiida_*"]  # package names should match these glob patterns (["*"] by default)

[tool.distutils.bdist_wheel]
universal = true

[tool.setuptools.package-data]
# include json input schema
"*" = ["*.json"]

[project]
# See https://www.python.org/dev/peps/pep-0621/
name = "aiida-nwchemex"
dynamic = ["version"]  # read from aiida_nwchemex/__init__.py
description = "AiiDA plugins by Microsoft Azure Quantum."
authors = [{name = "Microsoft"}, {name = "Leopold Talirz"}, {name = "Dave Wecker"}]
readme = "README.md"
license = {file = "LICENSE"}
classifiers = [
    "Programming Language :: Python",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Development Status :: 3 - Alpha",
    "Framework :: AiiDA"
]
keywords = ["aiida", "plugin"]
requires-python = ">=3.7"
dependencies = [
    "aiida-core>=2,<3",
    "aiida-nwchem",
    "voluptuous",
    "frozendict",
    "cclib~=1.7",
    "attrs",
    "basis_set_exchange",
    "importlib-metadata>=4.3",
]

[project.urls]
Source = "https://github.com/microsoft/aiida-nwchemex"

[project.optional-dependencies]
tests = [
    "pgtest~=1.3.1",
    "coverage[toml]",
    "pytest~=7.2",
    "ase~=3.22",
    "pytest-cov",
    "aiida-testing @git+https://github.com/aiidateam/aiida-testing@2bf9dfaef5d7658b47f5b31dd1ce81da5c43c53c",
]
pre-commit = [
    "pre-commit~=2.2",
    "pylint~=2.11.1"
]
docs = [
    "sphinx",
    "sphinxcontrib-contentui",
    "sphinxcontrib-details-directive",
    "furo"
]
scine = [
    "scine-database"
]

[project.entry-points."aiida.calculations"]
"nwchemex_cc.nwchem" = "aiida_nwchemex_cc.calculations:NwchemCalculation"
"nwchemex.nwchemexCalc" = "aiida_nwchemex.calculations:NwchemexCalculation"

[project.entry-points."aiida.parsers"]
"nwchemex_cc.nwchemex" = "aiida_nwchemex_cc.parsers:CCNwchemexParser"
"nwchemex_cc.nwchem" = "aiida_nwchemex_cc.parsers:CCNwchemParser"
"nwchemex.nwchemex" = "aiida_nwchemex.parsers:NwchemexParser"

[project.entry-points."aiida.workflows"]
"nwchemex_cc.nwchemChain" = "aiida_nwchemex_cc.workflows:NwchemCCChain"
"nwchemex_cc.nwchemexChain" = "aiida_nwchemex_cc.workflows:NwchemexCCChain"

[tool.pylint.format]
max-line-length = 125

[tool.pylint.messages_control]
disable = [
    "too-many-ancestors",
    "invalid-name",
    "duplicate-code",
    # black compatibility
    "C0330",
    "C0326",
]

[tool.pytest.ini_options]
# Configuration for [pytest](https://docs.pytest.org)
python_files = "test_*.py example_*.py"
filterwarnings = [
    "ignore::DeprecationWarning:aiida:",
    "ignore::DeprecationWarning:plumpy:",
    "ignore::DeprecationWarning:django:",
    "ignore::DeprecationWarning:yaml:",
    "ignore:Creating AiiDA configuration folder:",
]

[tool.coverage.run]
# Configuration of [coverage.py](https://coverage.readthedocs.io)
# reporting which lines of your plugin are covered by tests
source=["aiida_nwchemex"]

[tool.isort]
# Configuration of [isort](https://isort.readthedocs.io)
line_length = 120
force_sort_within_sections = true
sections = ['FUTURE', 'STDLIB', 'THIRDPARTY', 'AIIDA', 'FIRSTPARTY', 'LOCALFOLDER']
known_aiida = ['aiida']

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py38

[testenv]
usedevelop=True

[testenv:py{37,38,39,310}]
description = Run the test suite against a python version
extras = testing
commands = pytest {posargs}

[testenv:pre-commit]
description = Run the pre-commit checks
extras = pre-commit
commands = pre-commit run {posargs}

[testenv:docs]
description = Build the documentation
extras = docs
commands = sphinx-build -nW --keep-going -b html {posargs} docs/source docs/build/html
commands_post = echo "open file://{toxinidir}/docs/build/html/index.html"
"""
